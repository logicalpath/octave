function [J, grad] = costFunction(theta, X, y)
%COSTFUNCTION Compute cost and gradient for logistic regression
%   J = COSTFUNCTION(theta, X, y) computes the cost of using theta as the
%   parameter for logistic regression and the gradient of the cost
%   w.r.t. to the parameters.

% Initialize some useful values
m = length(y); % number of training examples

% You need to return the following variables correctly 
J = 0;
grad = zeros(size(theta));

% ====================== YOUR CODE HERE ======================
% Instructions: Compute the cost of a particular choice of theta.
%               You should set J to the cost.
%               Compute the partial derivatives and set grad to the partial
%               derivatives of the cost w.r.t. each parameter in theta
%
% Note: grad should have the same dimensions as theta
%

% disp(size(X));
 disp(size(y));
% disp(size(theta));
% disp(m);

z = theta' * X';
 disp(size(z));

logg1 = log(sigmoid(z));
logg2 = log(1 - sigmoid(z));
 disp(size(logg1));
 disp(size(logg2));
term = 1 - y;
 disp(size(term));

t1 = -y' * log(sigmoid(z))';
t2 = (1 - y)' * log(1 - sigmoid(z)');
t3 = t1 - t2;

disp(size(t1));
disp(size(t2));
disp(size(t3));
disp(t3/m);
J = 1/m * (-y * log(sigmoid(z)) - (1 - y) * log(1 - sigmoid(z)));



% =============================================================

end
